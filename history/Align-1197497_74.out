Sourcing executables from speedseq.config ...
Aligning...
[M::bwa_idx_load_from_disk] read 0 ALT contigs
samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening B10.ITZ2kUskdVsR/disc_pipe for write.
samblaster: Opening B10.ITZ2kUskdVsR/spl_pipe for write.
[M::process] read 67342 sequences (10000287 bp)...
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (418, 0, 0, 14)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 3, 6)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16)
[M::mem_pestat] mean and std.dev: (3.53, 2.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (1, 1, 1)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1)
[M::mem_pestat] mean and std.dev: (1.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 67342 reads in 6.340 CPU sec, 6.200 real sec
samblaster: Loaded 12 header sequence entries.
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (388, 0, 0, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 3, 6)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16)
[M::mem_pestat] mean and std.dev: (3.77, 2.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67342 reads in 6.781 CPU sec, 6.607 real sec
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (371, 0, 0, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 3, 6)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16)
[M::mem_pestat] mean and std.dev: (3.82, 2.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (1, 1, 1)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1)
[M::mem_pestat] mean and std.dev: (1.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 67342 reads in 6.837 CPU sec, 6.625 real sec
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (347, 0, 0, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 2, 5)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13)
[M::mem_pestat] mean and std.dev: (3.44, 2.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67342 reads in 6.854 CPU sec, 6.687 real sec
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (391, 0, 0, 9)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 3, 7)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19)
[M::mem_pestat] mean and std.dev: (3.80, 3.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 25)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67342 reads in 6.615 CPU sec, 6.431 real sec
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (418, 0, 0, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 5)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13)
[M::mem_pestat] mean and std.dev: (3.55, 2.49)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (1, 1, 1)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1)
[M::mem_pestat] mean and std.dev: (1.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 67342 reads in 6.554 CPU sec, 6.402 real sec
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (419, 0, 0, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 5)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13)
[M::mem_pestat] mean and std.dev: (3.65, 2.72)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (1, 1, 1)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1)
[M::mem_pestat] mean and std.dev: (1.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 67342 reads in 6.621 CPU sec, 6.441 real sec
[M::process] read 67342 sequences (10000287 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (477, 0, 0, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 5)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13)
[M::mem_pestat] mean and std.dev: (3.66, 2.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67342 reads in 6.638 CPU sec, 6.480 real sec
[M::process] read 28362 sequences (4211757 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (388, 0, 0, 42)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 7)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19)
[M::mem_pestat] mean and std.dev: (4.07, 2.93)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 25)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (1, 1, 1)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1)
[M::mem_pestat] mean and std.dev: (1.00, 0.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1)
[M::mem_process_seqs] Processed 67342 reads in 9.395 CPU sec, 9.286 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (176, 0, 0, 4)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 6)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16)
[M::mem_pestat] mean and std.dev: (3.94, 2.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 28362 reads in 3.024 CPU sec, 2.973 real sec
[main] Version: 0.7.12-r1039
samblaster: Output 66 discordant read pairs to B10.ITZ2kUskdVsR/disc_pipe
[main] CMD:samblaster: Output 16 split reads to B10.ITZ2kUskdVsR/spl_pipe
 /opt/linux/centos/7.x/x86_64/pkgs/bwa/0.7.12/bin/bwa mem -t 1 -R @RG\tID:B10\tSM:B10\tLB:Lib\ References.fasta ExternalData/B10_pair1.fastq ExternalData/B10_pair2.fastqsamblaster: Marked 315394 of 317220 (99.42%) read ids as duplicates using 1340k memory in 
[main] Real time: 64.485 sec; CPU: 65.796 sec
1.341S CPU seconds and 1M4S(64S) wall time.
Done
Using GATK jar /bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar HaplotypeCaller -R References.fasta -I results/B10.bam -O results/B10.g.vcf -ERC GVCF
11:10:17.587 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.so
11:10:18.546 INFO  HaplotypeCaller - ------------------------------------------------------------
11:10:18.548 INFO  HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.0.8.1
11:10:18.548 INFO  HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/
11:10:18.550 INFO  HaplotypeCaller - Executing as arajewski@i08 on Linux v3.10.0-957.el7.x86_64 amd64
11:10:18.551 INFO  HaplotypeCaller - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14
11:10:18.551 INFO  HaplotypeCaller - Start Date/Time: May 26, 2020 11:10:17 AM PDT
11:10:18.551 INFO  HaplotypeCaller - ------------------------------------------------------------
11:10:18.551 INFO  HaplotypeCaller - ------------------------------------------------------------
11:10:18.552 INFO  HaplotypeCaller - HTSJDK Version: 2.16.0
11:10:18.552 INFO  HaplotypeCaller - Picard Version: 2.18.7
11:10:18.552 INFO  HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2
11:10:18.552 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false
11:10:18.553 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true
11:10:18.553 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false
11:10:18.553 INFO  HaplotypeCaller - Deflater: IntelDeflater
11:10:18.553 INFO  HaplotypeCaller - Inflater: IntelInflater
11:10:18.553 INFO  HaplotypeCaller - GCS max retries/reopens: 20
11:10:18.553 INFO  HaplotypeCaller - Using google-cloud-java fork https://github.com/broadinstitute/google-cloud-java/releases/tag/0.20.5-alpha-GCS-RETRY-FIX
11:10:18.553 INFO  HaplotypeCaller - Initializing engine
11:10:19.052 INFO  HaplotypeCaller - Done initializing engine
11:10:19.066 INFO  HaplotypeCallerEngine - Tool is in reference confidence mode and the annotation, the following changes will be made to any specified annotations: 'StrandBiasBySample' will be enabled. 'ChromosomeCounts', 'FisherStrand', 'StrandOddsRatio' and 'QualByDepth' annotations have been disabled
11:10:19.070 INFO  HaplotypeCallerEngine - Standard Emitting and Calling confidence set to 0.0 for reference-model confidence output
11:10:19.070 INFO  HaplotypeCallerEngine - All sites annotated with PLs forced to true for reference-model confidence output
11:10:19.087 INFO  NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar!/com/intel/gkl/native/libgkl_utils.so
11:10:19.090 INFO  NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so
11:10:19.135 WARN  IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM
11:10:19.136 INFO  IntelPairHmm - Available threads: 2
11:10:19.136 INFO  IntelPairHmm - Requested threads: 4
11:10:19.136 WARN  IntelPairHmm - Using 2 available threads, but 4 were requested
11:10:19.136 INFO  PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation
11:10:19.227 INFO  ProgressMeter - Starting traversal
11:10:19.228 INFO  ProgressMeter -        Current Locus  Elapsed Minutes     Regions Processed   Regions/Minute
11:10:28.026 INFO  HaplotypeCaller - 630807 read(s) filtered by: ((((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter) AND GoodCigarReadFilter) AND WellformedReadFilter)
  630807 read(s) filtered by: (((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter) AND GoodCigarReadFilter)
      630807 read(s) filtered by: ((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter)
          630807 read(s) filtered by: (((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter)
              630807 read(s) filtered by: ((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter)
                  18 read(s) filtered by: (((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter)
                      18 read(s) filtered by: ((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter)
                          18 read(s) filtered by: (MappingQualityReadFilter AND MappingQualityAvailableReadFilter)
                              18 read(s) filtered by: MappingQualityReadFilter 
                  630789 read(s) filtered by: NotDuplicateReadFilter 

11:10:28.026 INFO  ProgressMeter -           SpFUL2:177              0.1                    27            184.1
11:10:28.026 INFO  ProgressMeter - Traversal complete. Processed 27 total regions in 0.1 minutes.
11:10:28.048 INFO  VectorLoglessPairHMM - Time spent in setup for JNI call : 0.002348831
11:10:28.050 INFO  PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 0.9117831620000001
11:10:28.050 INFO  SmithWatermanAligner - Total compute time in java Smith-Waterman : 0.97 sec
11:10:28.050 INFO  HaplotypeCaller - Shutting down engine
[May 26, 2020 11:10:28 AM PDT] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: 0.18 minutes.
Runtime.totalMemory()=2589982720
