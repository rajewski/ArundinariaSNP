Sourcing executables from speedseq.config ...
Aligning...
samblaster: Version 0.1.22
samblaster: Inputting from stdin
samblaster: Outputting to stdout
samblaster: Opening F10.iaFmNTkkr9Uy/disc_pipe for write.
[M::bwa_idx_load_from_disk] read 0 ALT contigs
samblaster: Opening F10.iaFmNTkkr9Uy/spl_pipe for write.
[M::process] read 67798 sequences (10000205 bp)...
[M::process] read 67798 sequences (10000205 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (344, 0, 0, 2)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 3, 6)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16)
[M::mem_pestat] mean and std.dev: (3.62, 2.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.473 CPU sec, 6.325 real sec
samblaster: Loaded 12 header sequence entries.
[M::process] read 67798 sequences (10000205 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (348, 0, 0, 4)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 7)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19)
[M::mem_pestat] mean and std.dev: (4.04, 2.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 25)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.684 CPU sec, 6.589 real sec
[M::process] read 67798 sequences (10000205 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (354, 0, 0, 2)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 7)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19)
[M::mem_pestat] mean and std.dev: (4.02, 3.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 25)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.848 CPU sec, 6.711 real sec
[M::process] read 67798 sequences (10000205 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (345, 0, 0, 3)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 7)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19)
[M::mem_pestat] mean and std.dev: (4.17, 2.86)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 25)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.763 CPU sec, 6.657 real sec
[M::process] read 67798 sequences (10000205 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (352, 0, 0, 2)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 7)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19)
[M::mem_pestat] mean and std.dev: (4.17, 3.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 25)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.842 CPU sec, 6.609 real sec
[M::process] read 67798 sequences (10000205 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (390, 0, 0, 4)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 7)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 19)
[M::mem_pestat] mean and std.dev: (3.99, 2.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 25)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.637 CPU sec, 6.513 real sec
[M::process] read 67798 sequences (10000205 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (390, 0, 0, 2)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 3, 5)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13)
[M::mem_pestat] mean and std.dev: (3.44, 2.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 17)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.394 CPU sec, 6.250 real sec
[M::process] read 35542 sequences (5242445 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (387, 0, 0, 2)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 3, 6)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16)
[M::mem_pestat] mean and std.dev: (3.76, 2.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 67798 reads in 6.342 CPU sec, 6.270 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (198, 0, 0, 1)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (1, 4, 6)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 16)
[M::mem_pestat] mean and std.dev: (3.85, 2.79)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 21)
[M::mem_pestat] skip orientation FR as there are not enough pairs
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35542 reads in 3.616 CPU sec, 3.593 real sec
[main] Version: 0.7.12-r1039
[main] CMD: /opt/linux/centos/7.x/x86_64/pkgs/bwa/0.7.12/bin/bwa mem -t 1 -R @RG\tID:F10\tSM:F10\tLB:Lib\ References.fasta ExternalData/F10_pair1.fastq ExternalData/F10_pair2.fastq
[main] Real time: 55.927 sec; CPU: 56.741 sec
samblaster: Output 94 discordant read pairs to F10.iaFmNTkkr9Uy/disc_pipe
samblaster: Output 20 split reads to F10.iaFmNTkkr9Uy/spl_pipe
samblaster: Marked 288612 of 288963 (99.88%) read ids as duplicates using 1344k memory in 1.275S CPU seconds and 56S wall time.
Done
Using GATK jar /bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=2 -jar /bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar HaplotypeCaller -R References.fasta -I results/F10.bam -O results/F10.g.vcf -ERC GVCF
11:10:07.740 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar!/com/intel/gkl/native/libgkl_compression.so
11:10:07.957 INFO  HaplotypeCaller - ------------------------------------------------------------
11:10:07.959 INFO  HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.0.8.1
11:10:07.959 INFO  HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/
11:10:07.960 INFO  HaplotypeCaller - Executing as arajewski@i29 on Linux v3.10.0-957.el7.x86_64 amd64
11:10:07.960 INFO  HaplotypeCaller - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_45-b14
11:10:07.960 INFO  HaplotypeCaller - Start Date/Time: May 26, 2020 11:10:07 AM PDT
11:10:07.961 INFO  HaplotypeCaller - ------------------------------------------------------------
11:10:07.961 INFO  HaplotypeCaller - ------------------------------------------------------------
11:10:07.961 INFO  HaplotypeCaller - HTSJDK Version: 2.16.0
11:10:07.961 INFO  HaplotypeCaller - Picard Version: 2.18.7
11:10:07.962 INFO  HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 2
11:10:07.962 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false
11:10:07.962 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true
11:10:07.962 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false
11:10:07.962 INFO  HaplotypeCaller - Deflater: IntelDeflater
11:10:07.962 INFO  HaplotypeCaller - Inflater: IntelInflater
11:10:07.962 INFO  HaplotypeCaller - GCS max retries/reopens: 20
11:10:07.962 INFO  HaplotypeCaller - Using google-cloud-java fork https://github.com/broadinstitute/google-cloud-java/releases/tag/0.20.5-alpha-GCS-RETRY-FIX
11:10:07.962 INFO  HaplotypeCaller - Initializing engine
11:10:09.135 INFO  HaplotypeCaller - Done initializing engine
11:10:09.144 INFO  HaplotypeCallerEngine - Tool is in reference confidence mode and the annotation, the following changes will be made to any specified annotations: 'StrandBiasBySample' will be enabled. 'ChromosomeCounts', 'FisherStrand', 'StrandOddsRatio' and 'QualByDepth' annotations have been disabled
11:10:09.150 INFO  HaplotypeCallerEngine - Standard Emitting and Calling confidence set to 0.0 for reference-model confidence output
11:10:09.150 INFO  HaplotypeCallerEngine - All sites annotated with PLs forced to true for reference-model confidence output
11:10:09.170 INFO  NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar!/com/intel/gkl/native/libgkl_utils.so
11:10:09.173 INFO  NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/bigdata/operations/pkgadmin/opt/linux/centos/7.x/x86_64/pkgs/gatk/4.0.8.1/gatk-package-4.0.8.1-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so
11:10:09.219 WARN  IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM
11:10:09.220 INFO  IntelPairHmm - Available threads: 2
11:10:09.220 INFO  IntelPairHmm - Requested threads: 4
11:10:09.220 WARN  IntelPairHmm - Using 2 available threads, but 4 were requested
11:10:09.220 INFO  PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation
11:10:09.321 INFO  ProgressMeter - Starting traversal
11:10:09.321 INFO  ProgressMeter -        Current Locus  Elapsed Minutes     Regions Processed   Regions/Minute
11:10:19.318 INFO  HaplotypeCaller - 577245 read(s) filtered by: ((((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter) AND GoodCigarReadFilter) AND WellformedReadFilter)
  577245 read(s) filtered by: (((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter) AND GoodCigarReadFilter)
      577245 read(s) filtered by: ((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter)
          577245 read(s) filtered by: (((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter)
              577245 read(s) filtered by: ((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter)
                  11 read(s) filtered by: (((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter)
                      11 read(s) filtered by: ((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter)
                          11 read(s) filtered by: (MappingQualityReadFilter AND MappingQualityAvailableReadFilter)
                              11 read(s) filtered by: MappingQualityReadFilter 
                  577234 read(s) filtered by: NotDuplicateReadFilter 

11:10:19.319 INFO  ProgressMeter -         SpMBP20.1:74              0.2                    24            144.0
11:10:19.319 INFO  ProgressMeter - Traversal complete. Processed 24 total regions in 0.2 minutes.
11:10:19.337 INFO  VectorLoglessPairHMM - Time spent in setup for JNI call : 0.0029803200000000003
11:10:19.337 INFO  PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 0.282331206
11:10:19.337 INFO  SmithWatermanAligner - Total compute time in java Smith-Waterman : 1.71 sec
11:10:19.337 INFO  HaplotypeCaller - Shutting down engine
[May 26, 2020 11:10:19 AM PDT] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: 0.19 minutes.
Runtime.totalMemory()=2866806784
