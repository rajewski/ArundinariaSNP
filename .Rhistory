aruncol +
arunshape
FF//2
FF/2
#FF/2
#make a color blind friendly palette
# consider making this a separate column of species
aruncol <- scale_color_manual(breaks = levels(species$Species),
values = c("#0000007D",
"#2A788E7D",
"grey",
"#0000007D",
"#7AD1517D"),
labels = c(expression(paste(italic("A. appalachiana"))),
expression(paste(italic("A. gigantea"))),
expression(paste(italic("A. tecta"))),
"Hybrid",
"Hull Road"))
ggplot(data = nucmds, aes(x = C1, y = C2, col=Species, shape=Species)) +
labs(title="Nuclear Loci \n(Ambiguous)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.text.align = 0) +
geom_point(size = 3) +
#geom_text_repel(aes(label = FID)) +
aruncol +
arunshape
#make a color blind friendly palette
# consider making this a separate column of species
aruncol <- scale_color_manual(breaks = levels(species$Species),
values = c("#0000007D",
"#2A788E7D",
"FFCC007D",
"#0000007D",
"#7AD1517D"),
labels = c(expression(paste(italic("A. appalachiana"))),
expression(paste(italic("A. gigantea"))),
expression(paste(italic("A. tecta"))),
"Hybrid",
"Hull Road"))
ggplot(data = nucmds, aes(x = C1, y = C2, col=Species, shape=Species)) +
labs(title="Nuclear Loci \n(Ambiguous)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.text.align = 0) +
geom_point(size = 3) +
#geom_text_repel(aes(label = FID)) +
aruncol +
arunshape
#make a color blind friendly palette
# consider making this a separate column of species
aruncol <- scale_color_manual(breaks = levels(species$Species),
values = c("#0000007D",
"#2A788E7D",
"#FFCC007D",
"#0000007D",
"#7AD1517D"),
labels = c(expression(paste(italic("A. appalachiana"))),
expression(paste(italic("A. gigantea"))),
expression(paste(italic("A. tecta"))),
"Hybrid",
"Hull Road"))
ggplot(data = nucmds, aes(x = C1, y = C2, col=Species, shape=Species)) +
labs(title="Nuclear Loci \n(Ambiguous)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.text.align = 0) +
geom_point(size = 3) +
#geom_text_repel(aes(label = FID)) +
aruncol +
arunshape
ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
WXYplot <- ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
geom_text_repel(data=subset(WXYvec, Species = "Unkn"),
aes(label = V1)) +
aruncol +
arunshape
View(WXYvec)
ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
geom_text_repel(data=subset(WXYvec, Species == "Unkn"),
aes(label = V1)) +
aruncol +
arunshape
#make a color blind friendly palette
# consider making this a separate column of species
aruncol <- scale_color_manual(breaks = levels(species$Species),
values = c("#000000FF",
"#2A788EFF",
"#FFCC00FF",
"#000000FF",
"#7AD151FF"),
labels = c(expression(paste(italic("A. appalachiana"))),
expression(paste(italic("A. gigantea"))),
expression(paste(italic("A. tecta"))),
"Hybrid",
"Hull Road"))
NucplotLegend <- ggplot(data = nucmds, aes(x = C1, y = C2, col=Species, shape=Species)) +
labs(title="Nuclear Loci \n(Ambiguous)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.text.align = 0) +
geom_point(size = 3) +
#geom_text_repel(aes(label = FID)) +
aruncol +
arunshape
Nucplot <- NucplotLegend +
theme(legend.position = "none")
WXYplot <- ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
PlasPlot <- ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(aes(label = V1)) +
aruncol
#Process Plastid
Plasfit <- cmdscale(Plasmds, eig=T, k=2) #fit mds
Plasvec <- cbind(rownames(Plasfit$points), Plasfit$points[,1:2])
Plasvec <- merge(Plasvec, species, by.x="V1", by.y="Sample") #merge with species names
Plasvec$V2 <- as.numeric(as.character(Plasvec$V2)) #change col types
Plasvec$V3 <- as.numeric(as.character(Plasvec$V3)) #change col types
PlasPlot <- ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(aes(label = V1)) +
aruncol
#Make Final Plot
legend <- get_legend(NucplotLegend +
theme(legend.position = "bottom",
legend.justification="center",
legend.title = element_blank()))
right_side <- plot_grid(PlasPlot, WXYplot,nrow=2, labels=c("B", "C"))
main <- plot_grid(Nucplot, right_side, ncol=2, labels=c("A"))
plot_grid(main, legend, nrow=2, rel_heights = c(1,0.1))
ggsave2(filename = "Figure 1.pdf", height = 12, width=12)
ggsave2(filename = "Figure 1.pdf", height = 12, width=18)
ggsave2(filename = "Figure 1.pdf", height = 16 ,width=9)
ggsave2(filename = "Figure 1.pdf", height = 6,width=9)
?read.nexus.dist()
WXYfit <- cmdscale(WXYmds, eig=T, k=2) #fit mds
WXYvec <- cbind(rownames(WXYfit$points), WXYfit$points[,1:2])
WXYvec <- merge(WXYvec, species, by.x="V1", by.y="Sample") #merge with species names
?cbind
#Process WXY
WXYfit <- cmdscale(WXYmds, eig=T, k=2) #fit mds
WXYvec <- cbind(rownames(WXYfit$points), WXYfit$points[,1:2], stringsAsFactors=F)
WXYvec <- merge(WXYvec, species, by.x="V1", by.y="Sample") #merge with species names
?merge
View(WXYvec)
ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
WXYvec <- cbind(rownames(WXYfit$points), WXYfit$points[,1:2])
WXYvec <- merge(WXYvec, species, by.x="V1", by.y="Sample") #merge with species names
WXYvec$V2 <- as.numeric(as.character(WXYvec$V2)) #change col types
WXYvec$V3 <- as.numeric(as.character(WXYvec$V3)) #change col types
ggplot(data = WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
ggplot(data = subset(WXYvec,Species=="Ahyb"), aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
ggplot(data = subset(WXYvec,Species==c("Ahyb", "Unkn")), aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
ggplot(data = subset(WXYvec,Species==c("Ahyb", "Unkn")), aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
ggplot(data =WXYvec, aes(x = V2, y = V3, color=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(aes(label = V1)) +
aruncol
View(Plasvec)
ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
geom_text_repel(aes(label = V1)) +
aruncol
ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species, shape=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species, shape=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
PlasPlot <- ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species, shape=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
ggplot(data =WXYvec, aes(x = V2, y = V3, color=Species, shape=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
WXYplot <- ggplot(data =WXYvec, aes(x = V2, y = V3, color=Species, shape=Species)) +
labs(title="WXY SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(data=subset(WXYvec, Species == "Unkn"), aes(label = V1)) +
aruncol +
arunshape
PlasPlot <- ggplot(data = Plasvec, aes(x = V2, y = V3, color=Species, shape=Species)) +
labs(title="Plastid SNPs \n(Phased)", x="Dimension 1", y="Dimension 2") +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.position = "none") +
geom_point(size = 3) +
#geom_text_repel(aes(label = V1)) +
aruncol +
arunshape
#Make Final Plot
legend <- get_legend(NucplotLegend +
theme(legend.position = "bottom",
legend.justification="center",
legend.title = element_blank()))
right_side <- plot_grid(PlasPlot, WXYplot,nrow=2, labels=c("B", "C"))
main <- plot_grid(Nucplot, right_side, ncol=2, labels=c("A"))
plot_grid(main, legend, nrow=2, rel_heights = c(1,0.1))
ggsave2(filename = "Figure 1.pdf", height = 6,width=9)
# General Data ------------------------------------------------------------
#necessary libraries
library(phangorn)
library(ggplot2)
library(ggrepel)
library(cowplot)
theme_set(theme_cowplot())
#Read in the species assignment data
species <- read.csv("phylo/JTCoords.csv", header=T, stringsAsFactors = F)
species$Species <- gsub(pattern = "\\.| " , "", species$Species)
species$Species <- substr(species$Species,1,4)
species$Species <- factor(species$Species, levels=c("Aapp", "Agig", "Atec", "Ahyb", "Unkn"))
# make a color blind friendly palette
#make it from several lists so that I can call it with base plotting and ggplot
speciescolors <- c("#000000FF",
"#2A788EFF",
"#FFCC00FF",
"#000000FF",
"#7AD151FF")
speciesnames <- c(expression(paste(italic("A. appalachiana"))),
expression(paste(italic("A. gigantea"))),
expression(paste(italic("A. tecta"))),
"Hybrid",
"Hull Road")
aruncol <- scale_color_manual(breaks = levels(species$Species),
values = speciescolors,
labels = speciesnames)
#add the colors to the species table
species$color <- setNames(speciescolors, levels(species$Species))[species$Species]
# shape hybrid sampels differently
arunshape <- scale_shape_manual(breaks = levels(species$Species),
values = c(16, 16, 16, 4, 16),
labels = speciesnames)
#plastid data
SplitsPlas <- read.nexus.networx("phylo/splitstree/Plastid_NoMissing.splits.nex")
SplitsPlas$tip.label <- gsub(pattern="Gig", "Gig9", SplitsPlas$tip.label)
SplitsPlas$tip.label <- gsub(pattern="Tec", "Tec7", SplitsPlas$tip.label)
SplitsPlas$tip.label <- gsub(pattern="H_", "H-", SplitsPlas$tip.label)
SplitsPlas$splits
str(SplitsPlas$splits)
SplitsPlas$translate
SplitsPlas$.plot
SplitsPlas$.plot$vertices
#Rotations Trial
SplitsPlasRotations <- SplitsPlas
str(SplitsPlas$.plot$vertices)
SplitsPlas$.plot$vertices[,c(x,y)]
SplitsPlas$.plot$vertices[,c("x","y")]
SplitsPlas$.plot$vertices[,c(-"y","x")]
SplitsPlas$.plot$vertices[,c("y"*-1,"x")]
SplitsPlas$.plot$vertices[,c("y","x")]
SplitsPlas$.plot$vertices[,c(y,"x")]
SplitsPlas$.plot$vertices[,c("-y","x")]
SplitsPlas$.plot$vertices[,c("y","x")]
SplitsPlas$.plot$vertices[,-"y"]
SplitsPlas$.plot$vertices[,-c("y")]
SplitsPlas$.plot$vertices[,c("y", "x")]
test <- SplitsPlas$.plot$vertices[,c("y", "x")]
test
cbind(test[,y], test[,x])
cbind(test[,"y"], test[,"x"])
cbind(-test[,"y"], test[,"x"])
cbind(-SplitsPlasRotations$.plot$vertices[,"y"],
SplitsPlasRotations$.plot$vertices[,"x"])
SplitsPlasRotation$.plot$vertices <- cbind(-SplitsPlasRotations$.plot$vertices[,"y"],
SplitsPlasRotations$.plot$vertices[,"x"])
SplitsPlasRotations$.plot$vertices <- cbind(-SplitsPlasRotations$.plot$vertices[,"y"],
SplitsPlasRotations$.plot$vertices[,"x"])
plot(SplitsPlas, "2D",
tip.col = species[match(SplitsPlas$tip.label, species$Sample),"color"],
edge.width = 1.5,
cex = 1,
font = 3)
plot(SplitsPlasRotations, "2D",
tip.col = species[match(SplitsPlas$tip.label, species$Sample),"color"],
edge.width = 1.5,
cex = 1,
font = 3)
#Rotations
SplitsLFYRotate <- SplitsLFY
#LFY data
SplitsLFY <- read.nexus.networx("phylo/splitstree/LFY.splits.nex")
SplitsLFY$tip.label <- gsub(pattern="H_", "H-", SplitsLFY$tip.label)
#Rotations
SplitsLFYRotate <- SplitsLFY
SplitsLFYRotate$.plot$vertices <- cbind(-SplitsLFYRotate$.plot$vertices[,"y"],
SplitsLFYRotate$.plot$vertices[,"x"])
plot(SplitsLFY, "2D",
tip.col = species[match(SplitsLFY$tip.label, species$Sample),"color"],
edge.width = 1.5,
cex = 1,
font = 3)
plot(SplitsLFYRotate, "2D",
tip.col = species[match(SplitsLFY$tip.label, species$Sample),"color"],
edge.width = 1.5,
cex = 1,
font = 3)
plot(SplitsLFYRotate, "2D",
tip.col = species[match(SplitsLFY$tip.label, species$Sample),"color"],
edge.width = 1.5,
cex = 1,
font = 3,)
plot(SplitsLFYRotate, "2D",
tip.col = species[match(SplitsLFY$tip.label, species$Sample),"color"],
edge.width = 1.5,
cex = 1,
font = 3,
show.tip.label = F)
plot(SplitsLFYRotate, "2D",
tip.col = species[match(SplitsLFY$tip.label, species$Sample),"color"],
edge.width = 1.5,
cex = 1,
font = 3)
legend("topleft",legend=speciesnames,col=speciescolors, pch=16, bty="n")
